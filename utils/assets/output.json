{"name":"hi/sample","dependencies":["folder/file","next/folder/file","_G","hi/sample"],"local":[{"name":"__index","level":"local","location":"hi/sample","description":"- table\n- key\n\n类似于 js 的 getter"},{"name":"__newindex","level":"local","location":"hi/sample","description":"- table\n- key\n- value\n\n类似于 js 的 setter, 与 [Writing doesn’t use prototype](https://javascript.info/prototype-inheritance#writing-doesn-t-use-prototype)设计一致"},{"name":"onreadonly","level":"local","location":"hi/sample","description":"实际上就是一个 setter"}],"external":[{"name":"makereadonly","level":"external","location":"hi/sample","description":"- table\n- key\n\n使得 key 变为只读"},{"name":"addsetter","level":"external","location":"hi/sample","description":"- table\n- key\n- fn: 即为 setter\n\n使得 key 变为只读"},{"name":"removesetter","level":"external","location":"hi/sample","description":""},{"name":"Class","level":"external","location":"hi/sample","description":"- base\n  - function: 说明是 constructor, 此时.\\_ctor = base, .\\_base = nil\n  - table: 此时才为基类, .\\_base 指向 base, base 所有的值会浅拷贝到 class\n- \\_ctor: function, constructor\n- props: 类的属性\n- return: class\n\nclass:\n\n- (self, ...): 构造函数\n- .is_a(self, klass): 是否是某个 klass\n- .\\_ctor: constructor\n- .\\_base: base class"},{"name":"ClassRegistry","level":"external","location":"hi/sample","description":"expose:\n\n- type: array\n\n通过 @Class 生成的, 都会在这个数组里面"}]}